// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.13.0
// source: pb/geocubeDownloader.proto

package geocube

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

var File_pb_geocubeDownloader_proto protoreflect.FileDescriptor

var file_pb_geocubeDownloader_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x70, 0x62, 0x2f, 0x67, 0x65, 0x6f, 0x63, 0x75, 0x62, 0x65, 0x44, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x67, 0x65,
	0x6f, 0x63, 0x75, 0x62, 0x65, 0x1a, 0x10, 0x70, 0x62, 0x2f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x70, 0x62, 0x2f, 0x63, 0x61, 0x74, 0x61,
	0x6c, 0x6f, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x32, 0xb0, 0x01, 0x0a, 0x11, 0x47, 0x65,
	0x6f, 0x63, 0x75, 0x62, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x12,
	0x55, 0x0a, 0x0c, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x75, 0x62, 0x65, 0x12,
	0x1f, 0x2e, 0x67, 0x65, 0x6f, 0x63, 0x75, 0x62, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x62,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x20, 0x2e, 0x67, 0x65, 0x6f, 0x63, 0x75, 0x62, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75,
	0x62, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x44, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x1a, 0x2e, 0x67, 0x65, 0x6f, 0x63, 0x75, 0x62, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e,
	0x67, 0x65, 0x6f, 0x63, 0x75, 0x62, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0e, 0x5a, 0x0c,
	0x2e, 0x2f, 0x70, 0x62, 0x3b, 0x67, 0x65, 0x6f, 0x63, 0x75, 0x62, 0x65, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var file_pb_geocubeDownloader_proto_goTypes = []interface{}{
	(*GetCubeMetadataRequest)(nil),  // 0: geocube.GetCubeMetadataRequest
	(*GetVersionRequest)(nil),       // 1: geocube.GetVersionRequest
	(*GetCubeMetadataResponse)(nil), // 2: geocube.GetCubeMetadataResponse
	(*GetVersionResponse)(nil),      // 3: geocube.GetVersionResponse
}
var file_pb_geocubeDownloader_proto_depIdxs = []int32{
	0, // 0: geocube.GeocubeDownloader.DownloadCube:input_type -> geocube.GetCubeMetadataRequest
	1, // 1: geocube.GeocubeDownloader.Version:input_type -> geocube.GetVersionRequest
	2, // 2: geocube.GeocubeDownloader.DownloadCube:output_type -> geocube.GetCubeMetadataResponse
	3, // 3: geocube.GeocubeDownloader.Version:output_type -> geocube.GetVersionResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_pb_geocubeDownloader_proto_init() }
func file_pb_geocubeDownloader_proto_init() {
	if File_pb_geocubeDownloader_proto != nil {
		return
	}
	file_pb_version_proto_init()
	file_pb_catalog_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pb_geocubeDownloader_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pb_geocubeDownloader_proto_goTypes,
		DependencyIndexes: file_pb_geocubeDownloader_proto_depIdxs,
	}.Build()
	File_pb_geocubeDownloader_proto = out.File
	file_pb_geocubeDownloader_proto_rawDesc = nil
	file_pb_geocubeDownloader_proto_goTypes = nil
	file_pb_geocubeDownloader_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// GeocubeDownloaderClient is the client API for GeocubeDownloader service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GeocubeDownloaderClient interface {
	// Request cube using metadatas returned by a call to Geocube.GetCube()
	DownloadCube(ctx context.Context, in *GetCubeMetadataRequest, opts ...grpc.CallOption) (GeocubeDownloader_DownloadCubeClient, error)
	// Version of the GeocubeDownloader
	Version(ctx context.Context, in *GetVersionRequest, opts ...grpc.CallOption) (*GetVersionResponse, error)
}

type geocubeDownloaderClient struct {
	cc grpc.ClientConnInterface
}

func NewGeocubeDownloaderClient(cc grpc.ClientConnInterface) GeocubeDownloaderClient {
	return &geocubeDownloaderClient{cc}
}

func (c *geocubeDownloaderClient) DownloadCube(ctx context.Context, in *GetCubeMetadataRequest, opts ...grpc.CallOption) (GeocubeDownloader_DownloadCubeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_GeocubeDownloader_serviceDesc.Streams[0], "/geocube.GeocubeDownloader/DownloadCube", opts...)
	if err != nil {
		return nil, err
	}
	x := &geocubeDownloaderDownloadCubeClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type GeocubeDownloader_DownloadCubeClient interface {
	Recv() (*GetCubeMetadataResponse, error)
	grpc.ClientStream
}

type geocubeDownloaderDownloadCubeClient struct {
	grpc.ClientStream
}

func (x *geocubeDownloaderDownloadCubeClient) Recv() (*GetCubeMetadataResponse, error) {
	m := new(GetCubeMetadataResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *geocubeDownloaderClient) Version(ctx context.Context, in *GetVersionRequest, opts ...grpc.CallOption) (*GetVersionResponse, error) {
	out := new(GetVersionResponse)
	err := c.cc.Invoke(ctx, "/geocube.GeocubeDownloader/Version", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GeocubeDownloaderServer is the server API for GeocubeDownloader service.
type GeocubeDownloaderServer interface {
	// Request cube using metadatas returned by a call to Geocube.GetCube()
	DownloadCube(*GetCubeMetadataRequest, GeocubeDownloader_DownloadCubeServer) error
	// Version of the GeocubeDownloader
	Version(context.Context, *GetVersionRequest) (*GetVersionResponse, error)
}

// UnimplementedGeocubeDownloaderServer can be embedded to have forward compatible implementations.
type UnimplementedGeocubeDownloaderServer struct {
}

func (*UnimplementedGeocubeDownloaderServer) DownloadCube(*GetCubeMetadataRequest, GeocubeDownloader_DownloadCubeServer) error {
	return status.Errorf(codes.Unimplemented, "method DownloadCube not implemented")
}
func (*UnimplementedGeocubeDownloaderServer) Version(context.Context, *GetVersionRequest) (*GetVersionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Version not implemented")
}

func RegisterGeocubeDownloaderServer(s *grpc.Server, srv GeocubeDownloaderServer) {
	s.RegisterService(&_GeocubeDownloader_serviceDesc, srv)
}

func _GeocubeDownloader_DownloadCube_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetCubeMetadataRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(GeocubeDownloaderServer).DownloadCube(m, &geocubeDownloaderDownloadCubeServer{stream})
}

type GeocubeDownloader_DownloadCubeServer interface {
	Send(*GetCubeMetadataResponse) error
	grpc.ServerStream
}

type geocubeDownloaderDownloadCubeServer struct {
	grpc.ServerStream
}

func (x *geocubeDownloaderDownloadCubeServer) Send(m *GetCubeMetadataResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _GeocubeDownloader_Version_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetVersionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GeocubeDownloaderServer).Version(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/geocube.GeocubeDownloader/Version",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GeocubeDownloaderServer).Version(ctx, req.(*GetVersionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GeocubeDownloader_serviceDesc = grpc.ServiceDesc{
	ServiceName: "geocube.GeocubeDownloader",
	HandlerType: (*GeocubeDownloaderServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Version",
			Handler:    _GeocubeDownloader_Version_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "DownloadCube",
			Handler:       _GeocubeDownloader_DownloadCube_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "pb/geocubeDownloader.proto",
}
